openapi: 3.0.0
info:
  title: Sample NodeJS API
  description: Optional multiline or single-line description
  version: 0.1.9
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://localhost:80/
    description: Optional server description, e.g. Internal staging server for testing
tags:
  - name: customer
    description: Everything about customers
paths:
  /customers:
    x-swagger-router-controller: customer.controller
    post:
      tags:
        - customer
      summary: Add a new customer to the store
      description: ''
      operationId: addCustomer
      requestBody:
        description: Customer Data
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Customer'
      responses:
        '200':
          description: A User object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    get:
      tags:
       - customer
      summary: Get all customers
      description: ''
      operationId: getAllCustomers
      responses:
        '200':
          description: All Customers Object
          content:
            application/json:
              schema:
                type: array
                items: 
                 $ref: "#/components/schemas/Customer"
  /customer/{customerId}:
    x-swagger-router-controller: customer.controller
    get:
      tags:
      - "customer"
      summary: "Find customer by ID"
      description: "Returns a single customer"
      operationId: "getCustomerById"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of customer to return"
        required: true
        schema:
         type: integer
      responses:
        '200':
          description: A Customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      tags:
      - "customer"
      summary: "delete customer by ID"
      description: "deletes a single customer"
      operationId: "deleteCustomerById"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of customer to return"
        required: true
        schema:
         type: integer
      responses:
        '200':
          description: A Customer object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
components:
    schemas:
      Customer:
        type: object
        required:
          - name
          - emailId
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
            example: John
          email:
            type: string
            example: s@123.com
          address:
            type: string
            example: India
          age:
            type: integer
          gender:
            type: string
            description: Gender
            enum:
              - Male
              - Female
              - Others
